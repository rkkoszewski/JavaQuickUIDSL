/*
 * generated by Xtext 2.11.0
 */
package com.robertkoszewski.dsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import com.robertkoszewski.dsl.ide.contentassist.antlr.internal.InternalQuickUIParser;
import com.robertkoszewski.dsl.services.QuickUIGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class QuickUIParser extends AbstractContentAssistParser {

	@Inject
	private QuickUIGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalQuickUIParser createParser() {
		InternalQuickUIParser result = new InternalQuickUIParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getJavaElementAccess().getSubelementAlternatives_3_0(), "rule__JavaElement__SubelementAlternatives_3_0");
					put(grammarAccess.getRowAccess().getSubelementAlternatives_3_0(), "rule__Row__SubelementAlternatives_3_0");
					put(grammarAccess.getOptionAccess().getAlternatives(), "rule__Option__Alternatives");
					put(grammarAccess.getConditionTypeAccess().getAlternatives(), "rule__ConditionType__Alternatives");
					put(grammarAccess.getBooleanAccess().getAlternatives_1(), "rule__Boolean__Alternatives_1");
					put(grammarAccess.getUIModelAccess().getGroup(), "rule__UIModel__Group__0");
					put(grammarAccess.getAliasAccess().getGroup(), "rule__Alias__Group__0");
					put(grammarAccess.getPackageAccess().getGroup(), "rule__Package__Group__0");
					put(grammarAccess.getPackageAccess().getGroup_1(), "rule__Package__Group_1__0");
					put(grammarAccess.getWindowAccess().getGroup(), "rule__Window__Group__0");
					put(grammarAccess.getWindowAccess().getGroup_1(), "rule__Window__Group_1__0");
					put(grammarAccess.getWindowAccess().getGroup_3(), "rule__Window__Group_3__0");
					put(grammarAccess.getWindowAccess().getGroup_5(), "rule__Window__Group_5__0");
					put(grammarAccess.getWindowAccess().getGroup_6(), "rule__Window__Group_6__0");
					put(grammarAccess.getJavaElementAccess().getGroup(), "rule__JavaElement__Group__0");
					put(grammarAccess.getJavaElementAccess().getGroup_1(), "rule__JavaElement__Group_1__0");
					put(grammarAccess.getRowAccess().getGroup(), "rule__Row__Group__0");
					put(grammarAccess.getRowAccess().getGroup_1(), "rule__Row__Group_1__0");
					put(grammarAccess.getOptionAccess().getGroup_4(), "rule__Option__Group_4__0");
					put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
					put(grammarAccess.getDisabledAccess().getGroup(), "rule__Disabled__Group__0");
					put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
					put(grammarAccess.getConditionAccess().getGroup_5(), "rule__Condition__Group_5__0");
					put(grammarAccess.getConditionTypeAccess().getGroup_0(), "rule__ConditionType__Group_0__0");
					put(grammarAccess.getConditionTypeAccess().getGroup_1(), "rule__ConditionType__Group_1__0");
					put(grammarAccess.getCheckedAccess().getGroup(), "rule__Checked__Group__0");
					put(grammarAccess.getOnClickAccess().getGroup(), "rule__OnClick__Group__0");
					put(grammarAccess.getFilterAccess().getGroup(), "rule__Filter__Group__0");
					put(grammarAccess.getBooleanAccess().getGroup(), "rule__Boolean__Group__0");
					put(grammarAccess.getUIModelAccess().getAliasAssignment_0(), "rule__UIModel__AliasAssignment_0");
					put(grammarAccess.getUIModelAccess().getWindowAssignment_1(), "rule__UIModel__WindowAssignment_1");
					put(grammarAccess.getAliasAccess().getNameAssignment_1(), "rule__Alias__NameAssignment_1");
					put(grammarAccess.getAliasAccess().getPackageAssignment_3(), "rule__Alias__PackageAssignment_3");
					put(grammarAccess.getPackageAccess().getPnameAssignment_0(), "rule__Package__PnameAssignment_0");
					put(grammarAccess.getPackageAccess().getSubpAssignment_1_1(), "rule__Package__SubpAssignment_1_1");
					put(grammarAccess.getWindowAccess().getMainAssignment_1_0(), "rule__Window__MainAssignment_1_0");
					put(grammarAccess.getWindowAccess().getNameAssignment_2(), "rule__Window__NameAssignment_2");
					put(grammarAccess.getWindowAccess().getTitleAssignment_3_1(), "rule__Window__TitleAssignment_3_1");
					put(grammarAccess.getWindowAccess().getMenu_elementsAssignment_5_2(), "rule__Window__Menu_elementsAssignment_5_2");
					put(grammarAccess.getWindowAccess().getContent_elementsAssignment_6_2(), "rule__Window__Content_elementsAssignment_6_2");
					put(grammarAccess.getJavaElementAccess().getAliasAssignment_0(), "rule__JavaElement__AliasAssignment_0");
					put(grammarAccess.getJavaElementAccess().getNameAssignment_1_1(), "rule__JavaElement__NameAssignment_1_1");
					put(grammarAccess.getJavaElementAccess().getSubelementAssignment_3(), "rule__JavaElement__SubelementAssignment_3");
					put(grammarAccess.getRowAccess().getNameAssignment_1_1(), "rule__Row__NameAssignment_1_1");
					put(grammarAccess.getRowAccess().getSubelementAssignment_3(), "rule__Row__SubelementAssignment_3");
					put(grammarAccess.getLabelAccess().getValueAssignment_2(), "rule__Label__ValueAssignment_2");
					put(grammarAccess.getDisabledAccess().getConditionAssignment_2(), "rule__Disabled__ConditionAssignment_2");
					put(grammarAccess.getConditionAccess().getElementAssignment_1(), "rule__Condition__ElementAssignment_1");
					put(grammarAccess.getConditionAccess().getNegationAssignment_3(), "rule__Condition__NegationAssignment_3");
					put(grammarAccess.getConditionAccess().getConditionAssignment_4(), "rule__Condition__ConditionAssignment_4");
					put(grammarAccess.getConditionAccess().getSubconditionAssignment_5_1(), "rule__Condition__SubconditionAssignment_5_1");
					put(grammarAccess.getCheckedAccess().getCheckedAssignment_2(), "rule__Checked__CheckedAssignment_2");
					put(grammarAccess.getOnClickAccess().getCallbackAssignment_2(), "rule__OnClick__CallbackAssignment_2");
					put(grammarAccess.getBooleanAccess().getIsTrueAssignment_1_0(), "rule__Boolean__IsTrueAssignment_1_0");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public QuickUIGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(QuickUIGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}

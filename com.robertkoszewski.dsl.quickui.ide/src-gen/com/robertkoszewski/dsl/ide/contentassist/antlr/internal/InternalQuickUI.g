/*
 * generated by Xtext 2.11.0
 */
grammar InternalQuickUI;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.robertkoszewski.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.robertkoszewski.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.robertkoszewski.dsl.services.QuickUIGrammarAccess;

}
@parser::members {
	private QuickUIGrammarAccess grammarAccess;

	public void setGrammarAccess(QuickUIGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUIModel
entryRuleUIModel
:
{ before(grammarAccess.getUIModelRule()); }
	 ruleUIModel
{ after(grammarAccess.getUIModelRule()); } 
	 EOF 
;

// Rule UIModel
ruleUIModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUIModelAccess().getGroup()); }
		(rule__UIModel__Group__0)
		{ after(grammarAccess.getUIModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlias
entryRuleAlias
:
{ before(grammarAccess.getAliasRule()); }
	 ruleAlias
{ after(grammarAccess.getAliasRule()); } 
	 EOF 
;

// Rule Alias
ruleAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasAccess().getGroup()); }
		(rule__Alias__Group__0)
		{ after(grammarAccess.getAliasAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow
entryRuleWindow
:
{ before(grammarAccess.getWindowRule()); }
	 ruleWindow
{ after(grammarAccess.getWindowRule()); } 
	 EOF 
;

// Rule Window
ruleWindow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindowAccess().getGroup()); }
		(rule__Window__Group__0)
		{ after(grammarAccess.getWindowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJavaElement
entryRuleJavaElement
:
{ before(grammarAccess.getJavaElementRule()); }
	 ruleJavaElement
{ after(grammarAccess.getJavaElementRule()); } 
	 EOF 
;

// Rule JavaElement
ruleJavaElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJavaElementAccess().getGroup()); }
		(rule__JavaElement__Group__0)
		{ after(grammarAccess.getJavaElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOption
entryRuleOption
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionAccess().getAlternatives()); }
		(rule__Option__Alternatives)
		{ after(grammarAccess.getOptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnabled
entryRuleEnabled
:
{ before(grammarAccess.getEnabledRule()); }
	 ruleEnabled
{ after(grammarAccess.getEnabledRule()); } 
	 EOF 
;

// Rule Enabled
ruleEnabled 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnabledAccess().getGroup()); }
		(rule__Enabled__Group__0)
		{ after(grammarAccess.getEnabledAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionType
entryRuleConditionType
:
{ before(grammarAccess.getConditionTypeRule()); }
	 ruleConditionType
{ after(grammarAccess.getConditionTypeRule()); } 
	 EOF 
;

// Rule ConditionType
ruleConditionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionTypeAccess().getAlternatives()); }
		(rule__ConditionType__Alternatives)
		{ after(grammarAccess.getConditionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChecked
entryRuleChecked
:
{ before(grammarAccess.getCheckedRule()); }
	 ruleChecked
{ after(grammarAccess.getCheckedRule()); } 
	 EOF 
;

// Rule Checked
ruleChecked 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckedAccess().getGroup()); }
		(rule__Checked__Group__0)
		{ after(grammarAccess.getCheckedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnClick
entryRuleOnClick
:
{ before(grammarAccess.getOnClickRule()); }
	 ruleOnClick
{ after(grammarAccess.getOnClickRule()); } 
	 EOF 
;

// Rule OnClick
ruleOnClick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnClickAccess().getGroup()); }
		(rule__OnClick__Group__0)
		{ after(grammarAccess.getOnClickAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getGroup()); }
		(rule__Filter__Group__0)
		{ after(grammarAccess.getFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterExpression
entryRuleFilterExpression
:
{ before(grammarAccess.getFilterExpressionRule()); }
	 ruleFilterExpression
{ after(grammarAccess.getFilterExpressionRule()); } 
	 EOF 
;

// Rule FilterExpression
ruleFilterExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterExpressionAccess().getTODOKeyword()); }
		'TODO'
		{ after(grammarAccess.getFilterExpressionAccess().getTODOKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean
entryRuleBoolean
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAccess().getGroup()); }
		(rule__Boolean__Group__0)
		{ after(grammarAccess.getBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getRowParserRuleCall_0()); }
		ruleRow
		{ after(grammarAccess.getElementAccess().getRowParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getJavaElementParserRuleCall_1()); }
		ruleJavaElement
		{ after(grammarAccess.getElementAccess().getJavaElementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__SubelementAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaElementAccess().getSubelementElementParserRuleCall_3_0_0()); }
		ruleElement
		{ after(grammarAccess.getJavaElementAccess().getSubelementElementParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getJavaElementAccess().getSubelementOptionParserRuleCall_3_0_1()); }
		ruleOption
		{ after(grammarAccess.getJavaElementAccess().getSubelementOptionParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__SubelementAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getSubelementElementParserRuleCall_3_0_0()); }
		ruleElement
		{ after(grammarAccess.getRowAccess().getSubelementElementParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRowAccess().getSubelementOptionParserRuleCall_3_0_1()); }
		ruleOption
		{ after(grammarAccess.getRowAccess().getSubelementOptionParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getLabelParserRuleCall_0()); }
		ruleLabel
		{ after(grammarAccess.getOptionAccess().getLabelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getEnabledParserRuleCall_1()); }
		ruleEnabled
		{ after(grammarAccess.getOptionAccess().getEnabledParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getCheckedParserRuleCall_2()); }
		ruleChecked
		{ after(grammarAccess.getOptionAccess().getCheckedParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getOnClickParserRuleCall_3()); }
		ruleOnClick
		{ after(grammarAccess.getOptionAccess().getOnClickParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getGroup_4()); }
		(rule__Option__Group_4__0)
		{ after(grammarAccess.getOptionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionTypeAccess().getGroup_0()); }
		(rule__ConditionType__Group_0__0)
		{ after(grammarAccess.getConditionTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionTypeAccess().getGroup_1()); }
		(rule__ConditionType__Group_1__0)
		{ after(grammarAccess.getConditionTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getIsTrueAssignment_1_0()); }
		(rule__Boolean__IsTrueAssignment_1_0)
		{ after(grammarAccess.getBooleanAccess().getIsTrueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAccess().getFalseKeyword_1_1()); }
		'false'
		{ after(grammarAccess.getBooleanAccess().getFalseKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UIModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UIModel__Group__0__Impl
	rule__UIModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UIModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUIModelAccess().getAliasAssignment_0()); }
	(rule__UIModel__AliasAssignment_0)*
	{ after(grammarAccess.getUIModelAccess().getAliasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UIModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UIModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UIModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUIModelAccess().getWindowAssignment_1()); }
		(rule__UIModel__WindowAssignment_1)
		{ after(grammarAccess.getUIModelAccess().getWindowAssignment_1()); }
	)
	(
		{ before(grammarAccess.getUIModelAccess().getWindowAssignment_1()); }
		(rule__UIModel__WindowAssignment_1)*
		{ after(grammarAccess.getUIModelAccess().getWindowAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alias__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alias__Group__0__Impl
	rule__Alias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasAccess().getUseKeyword_0()); }
	'use'
	{ after(grammarAccess.getAliasAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alias__Group__1__Impl
	rule__Alias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasAccess().getNameAssignment_1()); }
	(rule__Alias__NameAssignment_1)
	{ after(grammarAccess.getAliasAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alias__Group__2__Impl
	rule__Alias__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getAliasAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alias__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasAccess().getPackageAssignment_3()); }
	(rule__Alias__PackageAssignment_3)
	{ after(grammarAccess.getAliasAccess().getPackageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPnameAssignment_0()); }
	(rule__Package__PnameAssignment_0)
	{ after(grammarAccess.getPackageAccess().getPnameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getGroup_1()); }
	(rule__Package__Group_1__0)?
	{ after(grammarAccess.getPackageAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group_1__0__Impl
	rule__Package__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getPackageAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getSubpAssignment_1_1()); }
	(rule__Package__SubpAssignment_1_1)
	{ after(grammarAccess.getPackageAccess().getSubpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__0__Impl
	rule__Window__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getWindowAction_0()); }
	()
	{ after(grammarAccess.getWindowAccess().getWindowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__1__Impl
	rule__Window__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getGroup_1()); }
	(rule__Window__Group_1__0)?
	{ after(grammarAccess.getWindowAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__2__Impl
	rule__Window__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getNameAssignment_2()); }
	(rule__Window__NameAssignment_2)
	{ after(grammarAccess.getWindowAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__3__Impl
	rule__Window__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getGroup_3()); }
	(rule__Window__Group_3__0)?
	{ after(grammarAccess.getWindowAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__4__Impl
	rule__Window__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__5__Impl
	rule__Window__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getGroup_5()); }
	(rule__Window__Group_5__0)?
	{ after(grammarAccess.getWindowAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__6__Impl
	rule__Window__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getGroup_6()); }
	(rule__Window__Group_6__0)
	{ after(grammarAccess.getWindowAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_1__0__Impl
	rule__Window__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getMainAssignment_1_0()); }
	(rule__Window__MainAssignment_1_0)
	{ after(grammarAccess.getWindowAccess().getMainAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getWindowAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_3__0__Impl
	rule__Window__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getColonKeyword_3_0()); }
	':'
	{ after(grammarAccess.getWindowAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getTitleAssignment_3_1()); }
	(rule__Window__TitleAssignment_3_1)
	{ after(grammarAccess.getWindowAccess().getTitleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_5__0__Impl
	rule__Window__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getMenuKeyword_5_0()); }
	'Menu'
	{ after(grammarAccess.getWindowAccess().getMenuKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_5__1__Impl
	rule__Window__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_5__2__Impl
	rule__Window__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getMenu_elementsAssignment_5_2()); }
	(rule__Window__Menu_elementsAssignment_5_2)*
	{ after(grammarAccess.getWindowAccess().getMenu_elementsAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_5_3()); }
	'}'
	{ after(grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_6__0__Impl
	rule__Window__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getContentKeyword_6_0()); }
	'Content'
	{ after(grammarAccess.getWindowAccess().getContentKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_6__1__Impl
	rule__Window__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_6_1()); }
	'{'
	{ after(grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_6__2__Impl
	rule__Window__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getContent_elementsAssignment_6_2()); }
	(rule__Window__Content_elementsAssignment_6_2)*
	{ after(grammarAccess.getWindowAccess().getContent_elementsAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_6_3()); }
	'}'
	{ after(grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JavaElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaElement__Group__0__Impl
	rule__JavaElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaElementAccess().getAliasAssignment_0()); }
	(rule__JavaElement__AliasAssignment_0)
	{ after(grammarAccess.getJavaElementAccess().getAliasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaElement__Group__1__Impl
	rule__JavaElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaElementAccess().getGroup_1()); }
	(rule__JavaElement__Group_1__0)?
	{ after(grammarAccess.getJavaElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaElement__Group__2__Impl
	rule__JavaElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaElementAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getJavaElementAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaElement__Group__3__Impl
	rule__JavaElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaElementAccess().getSubelementAssignment_3()); }
	(rule__JavaElement__SubelementAssignment_3)*
	{ after(grammarAccess.getJavaElementAccess().getSubelementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaElement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaElementAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getJavaElementAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JavaElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaElement__Group_1__0__Impl
	rule__JavaElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaElementAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getJavaElementAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaElementAccess().getNameAssignment_1_1()); }
	(rule__JavaElement__NameAssignment_1_1)
	{ after(grammarAccess.getJavaElementAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRowKeyword_0()); }
	'Row'
	{ after(grammarAccess.getRowAccess().getRowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getGroup_1()); }
	(rule__Row__Group_1__0)?
	{ after(grammarAccess.getRowAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__2__Impl
	rule__Row__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__3__Impl
	rule__Row__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRowAccess().getSubelementAssignment_3()); }
		(rule__Row__SubelementAssignment_3)
		{ after(grammarAccess.getRowAccess().getSubelementAssignment_3()); }
	)
	(
		{ before(grammarAccess.getRowAccess().getSubelementAssignment_3()); }
		(rule__Row__SubelementAssignment_3)*
		{ after(grammarAccess.getRowAccess().getSubelementAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group_1__0__Impl
	rule__Row__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getRowAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getNameAssignment_1_1()); }
	(rule__Row__NameAssignment_1_1)
	{ after(grammarAccess.getRowAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group_4__0__Impl
	rule__Option__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getFilterAction_4_0()); }
	()
	{ after(grammarAccess.getOptionAccess().getFilterAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getFilterParserRuleCall_4_1()); }
	ruleFilter
	{ after(grammarAccess.getOptionAccess().getFilterParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
	'Label'
	{ after(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabelAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getValueAssignment_2()); }
	(rule__Label__ValueAssignment_2)
	{ after(grammarAccess.getLabelAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enabled__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enabled__Group__0__Impl
	rule__Enabled__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enabled__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnabledAccess().getEnabledKeyword_0()); }
	'Enabled'
	{ after(grammarAccess.getEnabledAccess().getEnabledKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enabled__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enabled__Group__1__Impl
	rule__Enabled__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enabled__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnabledAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getEnabledAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enabled__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enabled__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enabled__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnabledAccess().getConditionAssignment_2()); }
	(rule__Enabled__ConditionAssignment_2)
	{ after(grammarAccess.getEnabledAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIfKeyword_0()); }
	('if')?
	{ after(grammarAccess.getConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getElementAssignment_1()); }
	(rule__Condition__ElementAssignment_1)
	{ after(grammarAccess.getConditionAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIsKeyword_2()); }
	('is')?
	{ after(grammarAccess.getConditionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
	rule__Condition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getNegationAssignment_3()); }
	(rule__Condition__NegationAssignment_3)?
	{ after(grammarAccess.getConditionAccess().getNegationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__4__Impl
	rule__Condition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionAssignment_4()); }
	(rule__Condition__ConditionAssignment_4)
	{ after(grammarAccess.getConditionAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_5()); }
	(rule__Condition__Group_5__0)?
	{ after(grammarAccess.getConditionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_5__0__Impl
	rule__Condition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAndKeyword_5_0()); }
	'and'
	{ after(grammarAccess.getConditionAccess().getAndKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getSubconditionAssignment_5_1()); }
	(rule__Condition__SubconditionAssignment_5_1)
	{ after(grammarAccess.getConditionAccess().getSubconditionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionType__Group_0__0__Impl
	rule__ConditionType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionTypeAccess().getEmptyAction_0_0()); }
	()
	{ after(grammarAccess.getConditionTypeAccess().getEmptyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionTypeAccess().getEmptyKeyword_0_1()); }
	'empty'
	{ after(grammarAccess.getConditionTypeAccess().getEmptyKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionType__Group_1__0__Impl
	rule__ConditionType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionTypeAccess().getCheckedAction_1_0()); }
	()
	{ after(grammarAccess.getConditionTypeAccess().getCheckedAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionTypeAccess().getCheckedKeyword_1_1()); }
	'checked'
	{ after(grammarAccess.getConditionTypeAccess().getCheckedKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Checked__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checked__Group__0__Impl
	rule__Checked__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checked__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckedAccess().getCheckedKeyword_0()); }
	'Checked'
	{ after(grammarAccess.getCheckedAccess().getCheckedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checked__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checked__Group__1__Impl
	rule__Checked__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Checked__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckedAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCheckedAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checked__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checked__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checked__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckedAccess().getCheckedAssignment_2()); }
	(rule__Checked__CheckedAssignment_2)
	{ after(grammarAccess.getCheckedAccess().getCheckedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnClick__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnClick__Group__0__Impl
	rule__OnClick__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnClick__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnClickAccess().getOnClickKeyword_0()); }
	'OnClick'
	{ after(grammarAccess.getOnClickAccess().getOnClickKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnClick__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnClick__Group__1__Impl
	rule__OnClick__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnClick__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnClickAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOnClickAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnClick__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnClick__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnClick__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnClickAccess().getCallbackAssignment_2()); }
	(rule__OnClick__CallbackAssignment_2)
	{ after(grammarAccess.getOnClickAccess().getCallbackAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__0__Impl
	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
	'Filter'
	{ after(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__1__Impl
	rule__Filter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFilterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getFilterExpressionParserRuleCall_2()); }
	ruleFilterExpression
	{ after(grammarAccess.getFilterAccess().getFilterExpressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__0__Impl
	rule__Boolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getBooleanAction_0()); }
	()
	{ after(grammarAccess.getBooleanAccess().getBooleanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getAlternatives_1()); }
	(rule__Boolean__Alternatives_1)
	{ after(grammarAccess.getBooleanAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UIModel__AliasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUIModelAccess().getAliasAliasParserRuleCall_0_0()); }
		ruleAlias
		{ after(grammarAccess.getUIModelAccess().getAliasAliasParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UIModel__WindowAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUIModelAccess().getWindowWindowParserRuleCall_1_0()); }
		ruleWindow
		{ after(grammarAccess.getUIModelAccess().getWindowWindowParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__PackageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasAccess().getPackagePackageParserRuleCall_3_0()); }
		rulePackage
		{ after(grammarAccess.getAliasAccess().getPackagePackageParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__PnameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getPnameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPackageAccess().getPnameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__SubpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getSubpPackageParserRuleCall_1_1_0()); }
		rulePackage
		{ after(grammarAccess.getPackageAccess().getSubpPackageParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__MainAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getMainMainKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getWindowAccess().getMainMainKeyword_1_0_0()); }
			'Main'
			{ after(grammarAccess.getWindowAccess().getMainMainKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getWindowAccess().getMainMainKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getWindowAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__TitleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getWindowAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Menu_elementsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getMenu_elementsElementParserRuleCall_5_2_0()); }
		ruleElement
		{ after(grammarAccess.getWindowAccess().getMenu_elementsElementParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Content_elementsAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getContent_elementsElementParserRuleCall_6_2_0()); }
		ruleElement
		{ after(grammarAccess.getWindowAccess().getContent_elementsElementParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__AliasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaElementAccess().getAliasAliasCrossReference_0_0()); }
		(
			{ before(grammarAccess.getJavaElementAccess().getAliasAliasIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJavaElementAccess().getAliasAliasIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getJavaElementAccess().getAliasAliasCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaElementAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getJavaElementAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaElement__SubelementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaElementAccess().getSubelementAlternatives_3_0()); }
		(rule__JavaElement__SubelementAlternatives_3_0)
		{ after(grammarAccess.getJavaElementAccess().getSubelementAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__SubelementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getSubelementAlternatives_3_0()); }
		(rule__Row__SubelementAlternatives_3_0)
		{ after(grammarAccess.getRowAccess().getSubelementAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLabelAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enabled__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnabledAccess().getConditionConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getEnabledAccess().getConditionConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getElementElementCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getElementElementIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionAccess().getElementElementIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConditionAccess().getElementElementCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__NegationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getNegationNotKeyword_3_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getNegationNotKeyword_3_0()); }
			'not'
			{ after(grammarAccess.getConditionAccess().getNegationNotKeyword_3_0()); }
		)
		{ after(grammarAccess.getConditionAccess().getNegationNotKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getConditionConditionTypeParserRuleCall_4_0()); }
		ruleConditionType
		{ after(grammarAccess.getConditionAccess().getConditionConditionTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__SubconditionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getSubconditionConditionParserRuleCall_5_1_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionAccess().getSubconditionConditionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checked__CheckedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckedAccess().getCheckedBooleanParserRuleCall_2_0()); }
		ruleBoolean
		{ after(grammarAccess.getCheckedAccess().getCheckedBooleanParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnClick__CallbackAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnClickAccess().getCallbackIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOnClickAccess().getCallbackIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__IsTrueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getIsTrueTrueKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getBooleanAccess().getIsTrueTrueKeyword_1_0_0()); }
			'true'
			{ after(grammarAccess.getBooleanAccess().getIsTrueTrueKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getBooleanAccess().getIsTrueTrueKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

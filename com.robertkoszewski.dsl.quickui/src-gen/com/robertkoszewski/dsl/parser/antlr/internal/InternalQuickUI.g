/*
 * generated by Xtext 2.11.0
 */
grammar InternalQuickUI;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.robertkoszewski.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.robertkoszewski.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.robertkoszewski.dsl.services.QuickUIGrammarAccess;

}

@parser::members {

 	private QuickUIGrammarAccess grammarAccess;

    public InternalQuickUIParser(TokenStream input, QuickUIGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "UIModel";
   	}

   	@Override
   	protected QuickUIGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleUIModel
entryRuleUIModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUIModelRule()); }
	iv_ruleUIModel=ruleUIModel
	{ $current=$iv_ruleUIModel.current; }
	EOF;

// Rule UIModel
ruleUIModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUIModelAccess().getAliasAliasParserRuleCall_0_0());
				}
				lv_alias_0_0=ruleAlias
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUIModelRule());
					}
					add(
						$current,
						"alias",
						lv_alias_0_0,
						"com.robertkoszewski.dsl.QuickUI.Alias");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUIModelAccess().getWindowWindowParserRuleCall_1_0());
				}
				lv_window_1_0=ruleWindow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUIModelRule());
					}
					add(
						$current,
						"window",
						lv_window_1_0,
						"com.robertkoszewski.dsl.QuickUI.Window");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_ruleAlias=ruleAlias
	{ $current=$iv_ruleAlias.current; }
	EOF;

// Rule Alias
ruleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='use'
		{
			newLeafNode(otherlv_0, grammarAccess.getAliasAccess().getUseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAliasAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasAccess().getPackagePackageParserRuleCall_3_0());
				}
				lv_package_3_0=rulePackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasRule());
					}
					set(
						$current,
						"package",
						lv_package_3_0,
						"com.robertkoszewski.dsl.QuickUI.Package");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_pname_0_0=RULE_ID
				{
					newLeafNode(lv_pname_0_0, grammarAccess.getPackageAccess().getPnameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageRule());
					}
					setWithLastConsumed(
						$current,
						"pname",
						lv_pname_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getFullStopKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getSubpPackageParserRuleCall_1_1_0());
					}
					lv_subp_2_0=rulePackage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						set(
							$current,
							"subp",
							lv_subp_2_0,
							"com.robertkoszewski.dsl.QuickUI.Package");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleWindow
entryRuleWindow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWindowRule()); }
	iv_ruleWindow=ruleWindow
	{ $current=$iv_ruleWindow.current; }
	EOF;

// Rule Window
ruleWindow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWindowAccess().getWindowAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_main_1_0='Main'
					{
						newLeafNode(lv_main_1_0, grammarAccess.getWindowAccess().getMainMainKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindowRule());
						}
						setWithLastConsumed($current, "main", true, "Main");
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getWindowAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getWindowAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWindowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getWindowAccess().getColonKeyword_3_0());
			}
			(
				(
					lv_title_5_0=RULE_STRING
					{
						newLeafNode(lv_title_5_0, grammarAccess.getWindowAccess().getTitleSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindowRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_7='Menu'
			{
				newLeafNode(otherlv_7, grammarAccess.getWindowAccess().getMenuKeyword_5_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWindowAccess().getMenu_elementsElementParserRuleCall_5_2_0());
					}
					lv_menu_elements_9_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWindowRule());
						}
						add(
							$current,
							"menu_elements",
							lv_menu_elements_9_0,
							"com.robertkoszewski.dsl.QuickUI.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		(
			otherlv_11='Content'
			{
				newLeafNode(otherlv_11, grammarAccess.getWindowAccess().getContentKeyword_6_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getWindowAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWindowAccess().getContent_elementsElementParserRuleCall_6_2_0());
					}
					lv_content_elements_13_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWindowRule());
						}
						add(
							$current,
							"content_elements",
							lv_content_elements_13_0,
							"com.robertkoszewski.dsl.QuickUI.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_6_3());
			}
		)
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getWindowAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getRowParserRuleCall_0());
		}
		this_Row_0=ruleRow
		{
			$current = $this_Row_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getJavaElementParserRuleCall_1());
		}
		this_JavaElement_1=ruleJavaElement
		{
			$current = $this_JavaElement_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJavaElement
entryRuleJavaElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJavaElementRule()); }
	iv_ruleJavaElement=ruleJavaElement
	{ $current=$iv_ruleJavaElement.current; }
	EOF;

// Rule JavaElement
ruleJavaElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaElementRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getJavaElementAccess().getAliasAliasCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getJavaElementAccess().getColonKeyword_1_0());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getJavaElementAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJavaElementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getJavaElementAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getJavaElementAccess().getSubelementElementParserRuleCall_3_0_0());
					}
					lv_subelement_4_1=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJavaElementRule());
						}
						add(
							$current,
							"subelement",
							lv_subelement_4_1,
							"com.robertkoszewski.dsl.QuickUI.Element");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getJavaElementAccess().getSubelementOptionParserRuleCall_3_0_1());
					}
					lv_subelement_4_2=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJavaElementRule());
						}
						add(
							$current,
							"subelement",
							lv_subelement_4_2,
							"com.robertkoszewski.dsl.QuickUI.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getJavaElementAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Row'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowAccess().getRowKeyword_0());
		}
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getRowAccess().getColonKeyword_1_0());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRowRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRowAccess().getSubelementElementParserRuleCall_3_0_0());
					}
					lv_subelement_4_1=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowRule());
						}
						add(
							$current,
							"subelement",
							lv_subelement_4_1,
							"com.robertkoszewski.dsl.QuickUI.Element");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getRowAccess().getSubelementOptionParserRuleCall_3_0_1());
					}
					lv_subelement_4_2=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowRule());
						}
						add(
							$current,
							"subelement",
							lv_subelement_4_2,
							"com.robertkoszewski.dsl.QuickUI.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getRowAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionAccess().getLabelParserRuleCall_0());
		}
		this_Label_0=ruleLabel
		{
			$current = $this_Label_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getEnabledParserRuleCall_1());
		}
		this_Enabled_1=ruleEnabled
		{
			$current = $this_Enabled_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getCheckedParserRuleCall_2());
		}
		this_Checked_2=ruleChecked
		{
			$current = $this_Checked_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getOnClickParserRuleCall_3());
		}
		this_OnClick_3=ruleOnClick
		{
			$current = $this_OnClick_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOptionAccess().getFilterAction_4_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getOptionAccess().getFilterParserRuleCall_4_1());
			}
			ruleFilter
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Label'
		{
			newLeafNode(otherlv_0, grammarAccess.getLabelAccess().getLabelKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getLabelAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLabelRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEnabled
entryRuleEnabled returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnabledRule()); }
	iv_ruleEnabled=ruleEnabled
	{ $current=$iv_ruleEnabled.current; }
	EOF;

// Rule Enabled
ruleEnabled returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Enabled'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnabledAccess().getEnabledKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnabledAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnabledAccess().getConditionConditionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnabledRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"com.robertkoszewski.dsl.QuickUI.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='if'
			{
				newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getIfKeyword_0());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getElementElementCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2='is'
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getIsKeyword_2());
			}
		)?
		(
			(
				lv_negation_3_0='not'
				{
					newLeafNode(lv_negation_3_0, grammarAccess.getConditionAccess().getNegationNotKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed($current, "negation", true, "not");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getConditionConditionTypeParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleConditionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"com.robertkoszewski.dsl.QuickUI.ConditionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='and'
			{
				newLeafNode(otherlv_5, grammarAccess.getConditionAccess().getAndKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getSubconditionConditionParserRuleCall_5_1_0());
					}
					lv_subcondition_6_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"subcondition",
							lv_subcondition_6_0,
							"com.robertkoszewski.dsl.QuickUI.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConditionType
entryRuleConditionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionTypeRule()); }
	iv_ruleConditionType=ruleConditionType
	{ $current=$iv_ruleConditionType.current; }
	EOF;

// Rule ConditionType
ruleConditionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConditionTypeAccess().getEmptyAction_0_0(),
						$current);
				}
			)
			otherlv_1='empty'
			{
				newLeafNode(otherlv_1, grammarAccess.getConditionTypeAccess().getEmptyKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConditionTypeAccess().getCheckedAction_1_0(),
						$current);
				}
			)
			otherlv_3='checked'
			{
				newLeafNode(otherlv_3, grammarAccess.getConditionTypeAccess().getCheckedKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleChecked
entryRuleChecked returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckedRule()); }
	iv_ruleChecked=ruleChecked
	{ $current=$iv_ruleChecked.current; }
	EOF;

// Rule Checked
ruleChecked returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Checked'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckedAccess().getCheckedKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCheckedAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckedAccess().getCheckedBooleanParserRuleCall_2_0());
				}
				lv_checked_2_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckedRule());
					}
					set(
						$current,
						"checked",
						lv_checked_2_0,
						"com.robertkoszewski.dsl.QuickUI.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOnClick
entryRuleOnClick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnClickRule()); }
	iv_ruleOnClick=ruleOnClick
	{ $current=$iv_ruleOnClick.current; }
	EOF;

// Rule OnClick
ruleOnClick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OnClick'
		{
			newLeafNode(otherlv_0, grammarAccess.getOnClickAccess().getOnClickKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getOnClickAccess().getColonKeyword_1());
		}
		(
			(
				lv_callback_2_0=RULE_ID
				{
					newLeafNode(lv_callback_2_0, grammarAccess.getOnClickAccess().getCallbackIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOnClickRule());
					}
					setWithLastConsumed(
						$current,
						"callback",
						lv_callback_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFilter
entryRuleFilter returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFilterRule()); }
	iv_ruleFilter=ruleFilter
	{ $current=$iv_ruleFilter.current.getText(); }
	EOF;

// Rule Filter
ruleFilter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Filter'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFilterAccess().getFilterKeyword_0());
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFilterAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getFilterAccess().getFilterExpressionParserRuleCall_2());
		}
		this_FilterExpression_2=ruleFilterExpression
		{
			$current.merge(this_FilterExpression_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFilterExpression
entryRuleFilterExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFilterExpressionRule()); }
	iv_ruleFilterExpression=ruleFilterExpression
	{ $current=$iv_ruleFilterExpression.current.getText(); }
	EOF;

// Rule FilterExpression
ruleFilterExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='TODO'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getFilterExpressionAccess().getTODOKeyword());
	}
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current; }
	EOF;

// Rule Boolean
ruleBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanAccess().getBooleanAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_isTrue_1_0='true'
					{
						newLeafNode(lv_isTrue_1_0, grammarAccess.getBooleanAccess().getIsTrueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanRule());
						}
						setWithLastConsumed($current, "isTrue", true, "true");
					}
				)
			)
			    |
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getBooleanAccess().getFalseKeyword_1_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

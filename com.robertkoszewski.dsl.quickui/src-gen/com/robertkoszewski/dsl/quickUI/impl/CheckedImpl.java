/**
 * generated by Xtext 2.11.0
 */
package com.robertkoszewski.dsl.quickUI.impl;

import com.robertkoszewski.dsl.quickUI.Checked;
import com.robertkoszewski.dsl.quickUI.QuickUIPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Checked</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.robertkoszewski.dsl.quickUI.impl.CheckedImpl#getChecked <em>Checked</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CheckedImpl extends OptionImpl implements Checked
{
  /**
   * The cached value of the '{@link #getChecked() <em>Checked</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChecked()
   * @generated
   * @ordered
   */
  protected com.robertkoszewski.dsl.quickUI.Boolean checked;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CheckedImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QuickUIPackage.Literals.CHECKED;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.robertkoszewski.dsl.quickUI.Boolean getChecked()
  {
    return checked;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChecked(com.robertkoszewski.dsl.quickUI.Boolean newChecked, NotificationChain msgs)
  {
    com.robertkoszewski.dsl.quickUI.Boolean oldChecked = checked;
    checked = newChecked;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QuickUIPackage.CHECKED__CHECKED, oldChecked, newChecked);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setChecked(com.robertkoszewski.dsl.quickUI.Boolean newChecked)
  {
    if (newChecked != checked)
    {
      NotificationChain msgs = null;
      if (checked != null)
        msgs = ((InternalEObject)checked).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QuickUIPackage.CHECKED__CHECKED, null, msgs);
      if (newChecked != null)
        msgs = ((InternalEObject)newChecked).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QuickUIPackage.CHECKED__CHECKED, null, msgs);
      msgs = basicSetChecked(newChecked, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QuickUIPackage.CHECKED__CHECKED, newChecked, newChecked));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QuickUIPackage.CHECKED__CHECKED:
        return basicSetChecked(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QuickUIPackage.CHECKED__CHECKED:
        return getChecked();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QuickUIPackage.CHECKED__CHECKED:
        setChecked((com.robertkoszewski.dsl.quickUI.Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QuickUIPackage.CHECKED__CHECKED:
        setChecked((com.robertkoszewski.dsl.quickUI.Boolean)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QuickUIPackage.CHECKED__CHECKED:
        return checked != null;
    }
    return super.eIsSet(featureID);
  }

} //CheckedImpl
